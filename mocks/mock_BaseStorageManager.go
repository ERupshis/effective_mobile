// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/erupshis/effective_mobile/internal/server/storage/managers (interfaces: BaseStorageManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	datastructs "github.com/erupshis/effective_mobile/internal/datastructs"
	gomock "github.com/golang/mock/gomock"
)

// MockBaseStorageManager is a mock of BaseStorageManager interface.
type MockBaseStorageManager struct {
	ctrl     *gomock.Controller
	recorder *MockBaseStorageManagerMockRecorder
}

// MockBaseStorageManagerMockRecorder is the mock recorder for MockBaseStorageManager.
type MockBaseStorageManagerMockRecorder struct {
	mock *MockBaseStorageManager
}

// NewMockBaseStorageManager creates a new mock instance.
func NewMockBaseStorageManager(ctrl *gomock.Controller) *MockBaseStorageManager {
	mock := &MockBaseStorageManager{ctrl: ctrl}
	mock.recorder = &MockBaseStorageManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBaseStorageManager) EXPECT() *MockBaseStorageManagerMockRecorder {
	return m.recorder
}

// AddPerson mocks base method.
func (m *MockBaseStorageManager) AddPerson(arg0 context.Context, arg1 *datastructs.PersonData) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddPerson", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddPerson indicates an expected call of AddPerson.
func (mr *MockBaseStorageManagerMockRecorder) AddPerson(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddPerson", reflect.TypeOf((*MockBaseStorageManager)(nil).AddPerson), arg0, arg1)
}

// CheckConnection mocks base method.
func (m *MockBaseStorageManager) CheckConnection(arg0 context.Context) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckConnection", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckConnection indicates an expected call of CheckConnection.
func (mr *MockBaseStorageManagerMockRecorder) CheckConnection(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckConnection", reflect.TypeOf((*MockBaseStorageManager)(nil).CheckConnection), arg0)
}

// Close mocks base method.
func (m *MockBaseStorageManager) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockBaseStorageManagerMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockBaseStorageManager)(nil).Close))
}

// DeletePersonById mocks base method.
func (m *MockBaseStorageManager) DeletePersonById(arg0 context.Context, arg1 int64) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePersonById", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeletePersonById indicates an expected call of DeletePersonById.
func (mr *MockBaseStorageManagerMockRecorder) DeletePersonById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePersonById", reflect.TypeOf((*MockBaseStorageManager)(nil).DeletePersonById), arg0, arg1)
}

// SelectPersons mocks base method.
func (m *MockBaseStorageManager) SelectPersons(arg0 context.Context, arg1 map[string]interface{}, arg2, arg3 int64) ([]datastructs.PersonData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectPersons", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]datastructs.PersonData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectPersons indicates an expected call of SelectPersons.
func (mr *MockBaseStorageManagerMockRecorder) SelectPersons(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectPersons", reflect.TypeOf((*MockBaseStorageManager)(nil).SelectPersons), arg0, arg1, arg2, arg3)
}

// UpdatePersonById mocks base method.
func (m *MockBaseStorageManager) UpdatePersonById(arg0 context.Context, arg1 int64, arg2 map[string]interface{}) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePersonById", arg0, arg1, arg2)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdatePersonById indicates an expected call of UpdatePersonById.
func (mr *MockBaseStorageManagerMockRecorder) UpdatePersonById(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePersonById", reflect.TypeOf((*MockBaseStorageManager)(nil).UpdatePersonById), arg0, arg1, arg2)
}
