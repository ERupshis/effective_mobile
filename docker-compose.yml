version: '3.8'
services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql


  redis:
    image: redis:latest
    ports:
      - '6379:6379'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    hostname: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile.server
    volumes:
      - .env_server:/.env_server
      - ./db/migrations:/db/migrations
    image: server/server:multistage
    depends_on:
      - db
      - redis
      - kafka
    ports:
      - '8080:8080'
    environment:
      ADDRESS: 0.0.0.0:8080
      BROKERS: kafka:9092
      DATABASE_DSN: postgres://postgres:postgres@db:5432/effective_mobile_db?sslmode=disable
      CACHE_DSN: redis://redis:6379?db=0
      GROUP: groupServer
      TOPIC_IN: FIO
      TOPIC_ERROR: FIO_FAILED
    command: ["./delay_start.sh", "db:5432", "--", "npm", "start"]

  agent:
    container_name: agent
    build:
      context: .
      dockerfile: Dockerfile.agent
    volumes:
      - .env_agent:/.env_agent
    image: agent/agent:multistage
    environment:
      BROKERS: kafka:9092
      TOPIC_ERROR: FIO_FAILED
      TOPIC_OUT: FIO
      GROUP: agentGroup
    depends_on:
      - kafka
volumes:
  db:
    driver: local
